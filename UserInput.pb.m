// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserInput.pb.h"

@implementation UserInputRoot
static id<PBExtensionField> UserInputRoot_keystroke = nil;
static id<PBExtensionField> UserInputRoot_resize = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserInputRoot class]) {
    UserInputRoot_keystroke =
      [[PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Instruction class]
                                       fieldNumber:2
                                      defaultValue:[Keystroke defaultInstance]
                               messageOrGroupClass:[Keystroke class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO] retain];
    UserInputRoot_resize =
      [[PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Instruction class]
                                       fieldNumber:3
                                      defaultValue:[ResizeMessage defaultInstance]
                               messageOrGroupClass:[ResizeMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO] retain];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:UserInputRoot_keystroke];
  [registry addExtension:UserInputRoot_resize];
}
+ (id<PBExtensionField>) keystroke {
  return UserInputRoot_keystroke;
}
+ (id<PBExtensionField>) resize {
  return UserInputRoot_resize;
}
@end

@interface UserMessage ()
@property (retain) NSMutableArray* mutableInstructionList;
@end

@implementation UserMessage

@synthesize mutableInstructionList;
- (void) dealloc {
  self.mutableInstructionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static UserMessage* defaultUserMessageInstance = nil;
+ (void) initialize {
  if (self == [UserMessage class]) {
    defaultUserMessageInstance = [[UserMessage alloc] init];
  }
}
+ (UserMessage*) defaultInstance {
  return defaultUserMessageInstance;
}
- (UserMessage*) defaultInstance {
  return defaultUserMessageInstance;
}
- (NSArray*) instructionList {
  return mutableInstructionList;
}
- (Instruction*) instructionAtIndex:(int32_t) index {
  id value = [mutableInstructionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (Instruction* element in self.instructionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Instruction* element in self.instructionList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Instruction* element in self.instructionList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserMessage*) parseFromData:(NSData*) data {
  return (UserMessage*)[[[UserMessage builder] mergeFromData:data] build];
}
+ (UserMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserMessage*)[[[UserMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserMessage*) parseFromInputStream:(NSInputStream*) input {
  return (UserMessage*)[[[UserMessage builder] mergeFromInputStream:input] build];
}
+ (UserMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserMessage*)[[[UserMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserMessage*)[[[UserMessage builder] mergeFromCodedInputStream:input] build];
}
+ (UserMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserMessage*)[[[UserMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserMessage_Builder*) builder {
  return [[[UserMessage_Builder alloc] init] autorelease];
}
+ (UserMessage_Builder*) builderWithPrototype:(UserMessage*) prototype {
  return [[UserMessage builder] mergeFrom:prototype];
}
- (UserMessage_Builder*) builder {
  return [UserMessage builder];
}
@end

@interface UserMessage_Builder()
@property (retain) UserMessage* result;
@end

@implementation UserMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserMessage_Builder*) clear {
  self.result = [[[UserMessage alloc] init] autorelease];
  return self;
}
- (UserMessage_Builder*) clone {
  return [UserMessage builderWithPrototype:result];
}
- (UserMessage*) defaultInstance {
  return [UserMessage defaultInstance];
}
- (UserMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserMessage*) buildPartial {
  UserMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserMessage_Builder*) mergeFrom:(UserMessage*) other {
  if (other == [UserMessage defaultInstance]) {
    return self;
  }
  if (other.mutableInstructionList.count > 0) {
    if (result.mutableInstructionList == nil) {
      result.mutableInstructionList = [NSMutableArray array];
    }
    [result.mutableInstructionList addObjectsFromArray:other.mutableInstructionList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Instruction_Builder* subBuilder = [Instruction builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInstruction:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) instructionList {
  if (result.mutableInstructionList == nil) { return [NSArray array]; }
  return result.mutableInstructionList;
}
- (Instruction*) instructionAtIndex:(int32_t) index {
  return [result instructionAtIndex:index];
}
- (UserMessage_Builder*) replaceInstructionAtIndex:(int32_t) index with:(Instruction*) value {
  [result.mutableInstructionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UserMessage_Builder*) addAllInstruction:(NSArray*) values {
  if (result.mutableInstructionList == nil) {
    result.mutableInstructionList = [NSMutableArray array];
  }
  [result.mutableInstructionList addObjectsFromArray:values];
  return self;
}
- (UserMessage_Builder*) clearInstructionList {
  result.mutableInstructionList = nil;
  return self;
}
- (UserMessage_Builder*) addInstruction:(Instruction*) value {
  if (result.mutableInstructionList == nil) {
    result.mutableInstructionList = [NSMutableArray array];
  }
  [result.mutableInstructionList addObject:value];
  return self;
}
@end

@interface Instruction ()
@end

@implementation Instruction

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static Instruction* defaultInstructionInstance = nil;
+ (void) initialize {
  if (self == [Instruction class]) {
    defaultInstructionInstance = [[Instruction alloc] init];
  }
}
+ (Instruction*) defaultInstance {
  return defaultInstructionInstance;
}
- (Instruction*) defaultInstance {
  return defaultInstructionInstance;
}
- (BOOL) isInitialized {
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self writeExtensionsToCodedOutputStream:output
                                      from:2
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Instruction*) parseFromData:(NSData*) data {
  return (Instruction*)[[[Instruction builder] mergeFromData:data] build];
}
+ (Instruction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Instruction*)[[[Instruction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Instruction*) parseFromInputStream:(NSInputStream*) input {
  return (Instruction*)[[[Instruction builder] mergeFromInputStream:input] build];
}
+ (Instruction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Instruction*)[[[Instruction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Instruction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Instruction*)[[[Instruction builder] mergeFromCodedInputStream:input] build];
}
+ (Instruction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Instruction*)[[[Instruction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Instruction_Builder*) builder {
  return [[[Instruction_Builder alloc] init] autorelease];
}
+ (Instruction_Builder*) builderWithPrototype:(Instruction*) prototype {
  return [[Instruction builder] mergeFrom:prototype];
}
- (Instruction_Builder*) builder {
  return [Instruction builder];
}
@end

@interface Instruction_Builder()
@property (retain) Instruction* result;
@end

@implementation Instruction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Instruction alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (Instruction_Builder*) clear {
  self.result = [[[Instruction alloc] init] autorelease];
  return self;
}
- (Instruction_Builder*) clone {
  return [Instruction builderWithPrototype:result];
}
- (Instruction*) defaultInstance {
  return [Instruction defaultInstance];
}
- (Instruction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Instruction*) buildPartial {
  Instruction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Instruction_Builder*) mergeFrom:(Instruction*) other {
  if (other == [Instruction defaultInstance]) {
    return self;
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Instruction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Instruction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface Keystroke ()
@property (retain) NSData* keys;
@end

@implementation Keystroke

- (BOOL) hasKeys {
  return !!hasKeys_;
}
- (void) setHasKeys:(BOOL) value {
  hasKeys_ = !!value;
}
@synthesize keys;
- (void) dealloc {
  self.keys = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.keys = [NSData data];
  }
  return self;
}
static Keystroke* defaultKeystrokeInstance = nil;
+ (void) initialize {
  if (self == [Keystroke class]) {
    defaultKeystrokeInstance = [[Keystroke alloc] init];
  }
}
+ (Keystroke*) defaultInstance {
  return defaultKeystrokeInstance;
}
- (Keystroke*) defaultInstance {
  return defaultKeystrokeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKeys) {
    [output writeData:4 value:self.keys];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasKeys) {
    size += computeDataSize(4, self.keys);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Keystroke*) parseFromData:(NSData*) data {
  return (Keystroke*)[[[Keystroke builder] mergeFromData:data] build];
}
+ (Keystroke*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Keystroke*)[[[Keystroke builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Keystroke*) parseFromInputStream:(NSInputStream*) input {
  return (Keystroke*)[[[Keystroke builder] mergeFromInputStream:input] build];
}
+ (Keystroke*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Keystroke*)[[[Keystroke builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Keystroke*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Keystroke*)[[[Keystroke builder] mergeFromCodedInputStream:input] build];
}
+ (Keystroke*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Keystroke*)[[[Keystroke builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Keystroke_Builder*) builder {
  return [[[Keystroke_Builder alloc] init] autorelease];
}
+ (Keystroke_Builder*) builderWithPrototype:(Keystroke*) prototype {
  return [[Keystroke builder] mergeFrom:prototype];
}
- (Keystroke_Builder*) builder {
  return [Keystroke builder];
}
@end

@interface Keystroke_Builder()
@property (retain) Keystroke* result;
@end

@implementation Keystroke_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Keystroke alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Keystroke_Builder*) clear {
  self.result = [[[Keystroke alloc] init] autorelease];
  return self;
}
- (Keystroke_Builder*) clone {
  return [Keystroke builderWithPrototype:result];
}
- (Keystroke*) defaultInstance {
  return [Keystroke defaultInstance];
}
- (Keystroke*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Keystroke*) buildPartial {
  Keystroke* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Keystroke_Builder*) mergeFrom:(Keystroke*) other {
  if (other == [Keystroke defaultInstance]) {
    return self;
  }
  if (other.hasKeys) {
    [self setKeys:other.keys];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Keystroke_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Keystroke_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 34: {
        [self setKeys:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasKeys {
  return result.hasKeys;
}
- (NSData*) keys {
  return result.keys;
}
- (Keystroke_Builder*) setKeys:(NSData*) value {
  result.hasKeys = YES;
  result.keys = value;
  return self;
}
- (Keystroke_Builder*) clearKeys {
  result.hasKeys = NO;
  result.keys = [NSData data];
  return self;
}
@end

@interface ResizeMessage ()
@property int32_t width;
@property int32_t height;
@end

@implementation ResizeMessage

- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) value {
  hasWidth_ = !!value;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) value {
  hasHeight_ = !!value;
}
@synthesize height;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.width = 0;
    self.height = 0;
  }
  return self;
}
static ResizeMessage* defaultResizeMessageInstance = nil;
+ (void) initialize {
  if (self == [ResizeMessage class]) {
    defaultResizeMessageInstance = [[ResizeMessage alloc] init];
  }
}
+ (ResizeMessage*) defaultInstance {
  return defaultResizeMessageInstance;
}
- (ResizeMessage*) defaultInstance {
  return defaultResizeMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWidth) {
    [output writeInt32:5 value:self.width];
  }
  if (self.hasHeight) {
    [output writeInt32:6 value:self.height];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasWidth) {
    size += computeInt32Size(5, self.width);
  }
  if (self.hasHeight) {
    size += computeInt32Size(6, self.height);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResizeMessage*) parseFromData:(NSData*) data {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromData:data] build];
}
+ (ResizeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResizeMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromInputStream:input] build];
}
+ (ResizeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResizeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ResizeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResizeMessage*)[[[ResizeMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResizeMessage_Builder*) builder {
  return [[[ResizeMessage_Builder alloc] init] autorelease];
}
+ (ResizeMessage_Builder*) builderWithPrototype:(ResizeMessage*) prototype {
  return [[ResizeMessage builder] mergeFrom:prototype];
}
- (ResizeMessage_Builder*) builder {
  return [ResizeMessage builder];
}
@end

@interface ResizeMessage_Builder()
@property (retain) ResizeMessage* result;
@end

@implementation ResizeMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ResizeMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResizeMessage_Builder*) clear {
  self.result = [[[ResizeMessage alloc] init] autorelease];
  return self;
}
- (ResizeMessage_Builder*) clone {
  return [ResizeMessage builderWithPrototype:result];
}
- (ResizeMessage*) defaultInstance {
  return [ResizeMessage defaultInstance];
}
- (ResizeMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResizeMessage*) buildPartial {
  ResizeMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ResizeMessage_Builder*) mergeFrom:(ResizeMessage*) other {
  if (other == [ResizeMessage defaultInstance]) {
    return self;
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResizeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResizeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 40: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 48: {
        [self setHeight:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasWidth {
  return result.hasWidth;
}
- (int32_t) width {
  return result.width;
}
- (ResizeMessage_Builder*) setWidth:(int32_t) value {
  result.hasWidth = YES;
  result.width = value;
  return self;
}
- (ResizeMessage_Builder*) clearWidth {
  result.hasWidth = NO;
  result.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return result.hasHeight;
}
- (int32_t) height {
  return result.height;
}
- (ResizeMessage_Builder*) setHeight:(int32_t) value {
  result.hasHeight = YES;
  result.height = value;
  return self;
}
- (ResizeMessage_Builder*) clearHeight {
  result.hasHeight = NO;
  result.height = 0;
  return self;
}
@end

